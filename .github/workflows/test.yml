name: Tests

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_MULTILEVEL_LOOKUP: 0
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os == 'almalinux' && 'ubuntu-latest' || matrix.os }}
    
    container:
      image: ${{ matrix.os == 'almalinux' && 'almalinux:9' || '' }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, almalinux, windows-latest ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Windows Defender (Windows)
        if: runner.os == 'Windows'
        run: |
          Add-MpPreference -ExclusionPath "${{ github.workspace }}"
          Add-MpPreference -ExclusionPath "$env:USERPROFILE\.nuget"
        shell: powershell
        continue-on-error: true

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install dependencies (AlmaLinux)
        if: matrix.os == 'almalinux'
        run: dnf install -y icu dotnet-sdk-9.0

      - name: Create NuGet cache directory (Windows)
        if: runner.os == 'Windows'
        run: |
          New-Item -ItemType Directory -Force -Path "${{ github.workspace }}/.nuget/packages"
          attrib +H "${{ github.workspace }}/.nuget"
        shell: powershell

      - name: Create NuGet cache directory (Unix)
        if: runner.os != 'Windows'
        run: mkdir -p ${{ github.workspace }}/.nuget/packages

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/nuget.config') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore tests/Acl.Fs.Tests.sln --packages ${{ github.workspace }}/.nuget/packages --no-cache --force

      - name: Debug NuGet cache directory (Windows)
        if: runner.os == 'Windows'
        run: Get-ChildItem -Path "${{ github.workspace }}/.nuget/packages" -Force
        shell: powershell

      - name: Debug NuGet cache directory (Unix)
        if: runner.os != 'Windows'
        run: ls -la ${{ github.workspace }}/.nuget/packages

      - name: Build tests
        run: dotnet build tests/Acl.Fs.Tests.sln --no-restore --configuration Release --verbosity minimal

      - name: Run tests
        run: dotnet test tests/Acl.Fs.Tests.sln --configuration Release --verbosity minimal --logger "console;verbosity=detailed" --no-build
